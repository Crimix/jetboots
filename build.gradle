buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url='https://dist.creeper.host/Sponge/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: "com.wynprice.cursemaven"
apply plugin: 'eclipse'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

ext.priv = parseConfig(file('private.properties'))

version = version_major + '.' + version_minor + '.' + version_patch
group = "${mod_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_archivesBaseName + "-" + mc_version

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client = {
            workingDirectory project.file("run/client")
            arg "-mixin.config=jetboots.mixins.json"

            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'

            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'

            // Disable mixin refmaps
            property 'mixin.env.disableRefMap', 'true'
            mods {
                jetboots {
                    source sourceSets.main
                }
            }
        }
        server = {
            workingDirectory project.file("run/server")
            arg "-mixin.config=jetboots.mixins.json"

            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'

            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'

            // Disable mixin refmaps
            property 'mixin.env.disableRefMap', 'true'
            mods {
                jetboots {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file("run/data")

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'jetboots', '--all', '--output', file("src/main/generated_resources"), '--existing', file('src/main/resources/')
            mods {
                jetboots {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl/"
    }
    maven {
        name = "forge"
        url = "https://files.minecraftforge.net/maven/"
    }
    maven {
        name = "theillusivec4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Curse"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/crimix/bml")
        credentials {
            username = priv.githubUser
            password = priv.githubToken
        }
    }
    mavenLocal()
}

dependencies {
    minecraft([
            group  : "${project.forge_group}",
            name   : "forge",
            version: "${project.mc_version}-${project.forge_version}"
    ])

    compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")
    compileOnly fg.deobf("com.black_dog20.bml:bml:${mc_version}-${bml_version}")
    runtimeOnly fg.deobf("com.black_dog20.bml:bml:${mc_version}-${bml_version}")
    compileOnly fg.deobf("curse.maven:cyclic:3086233")
    runtimeOnly fg.deobf("curse.maven:cyclic:3086233")
    compileOnly fg.deobf("curse.maven:mekanism:3090945")
    runtimeOnly fg.deobf("curse.maven:mekanism:3090945")
    compileOnly fg.deobf("curse.maven:mekanism-tools:3090948")
    runtimeOnly fg.deobf("curse.maven:mekanism-tools:3090948")
    compileOnly fg.deobf("curse.maven:mekanism-generators:3090947")
    runtimeOnly fg.deobf("curse.maven:mekanism-generators:3090947")
}

jar {
    manifest {
        attributes(["Specification-Title"     : "jetboots",
                    "Specification-Vendor"    : "black_dog20",
                    "Specification-Version"   : "1",  // We are version 1 of ourselves
                    "Implementation-Title"    : "Jet Boots",
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : "black_dog20",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "MixinConfigs": "jetboots.mixins.json"
        ])

    }
}

curseforge {
    apiKey = priv.apiKey
    project {
        id = '373208'
        changelogType = 'markdown'
        changelog = 'As always find the changelog here [CHANGELOG](https://github.com/Crimix/jetboots/blob/1.15/CHANGELOG.md)'
        releaseType = 'release'
        addGameVersion 'Forge'
        addGameVersion 'Java 8'
        addGameVersion '1.16.3'
        addGameVersion '1.16.4'
        relations {
            requiredDependency 'bml'
        }
    }
}

def clearFile(File f) {
    f.withWriter {
        writer -> writer.write('')
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "jetboots.refmap.json"
}
